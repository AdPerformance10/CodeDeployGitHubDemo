<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="01_AgendaEngine_ageEvento_POST" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host Catalog - QA - (local-run)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="_host" elementType="Argument">
            <stringProp name="Argument.name">_host</stringProp>
            <stringProp name="Argument.value">agenda-engine.qas.cloud.gentera.com.mx</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_proto" elementType="Argument">
            <stringProp name="Argument.name">_proto</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Host Catalog - QA" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="_host" elementType="Argument">
            <stringProp name="Argument.name">_host</stringProp>
            <stringProp name="Argument.value">${__P(host)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_proto" elementType="Argument">
            <stringProp name="Argument.name">_proto</stringProp>
            <stringProp name="Argument.value">${__P(proto)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Script Configuration" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="_delay" elementType="Argument">
            <stringProp name="Argument.name">_delay</stringProp>
            <stringProp name="Argument.value">${__P(delay)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">7000 - 1 Cycle per Minute</stringProp>
          </elementProp>
          <elementProp name="_delay_offset" elementType="Argument">
            <stringProp name="Argument.name">_delay_offset</stringProp>
            <stringProp name="Argument.value">${__P(delayoffset)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">15000 - 1 Cycle per Minute</stringProp>
          </elementProp>
          <elementProp name="_absolutepath" elementType="Argument">
            <stringProp name="Argument.name">_absolutepath</stringProp>
            <stringProp name="Argument.value">./results</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_idb_host" elementType="Argument">
            <stringProp name="Argument.name">_idb_host</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_idb_port" elementType="Argument">
            <stringProp name="Argument.name">_idb_port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_idb_node" elementType="Argument">
            <stringProp name="Argument.name">_idb_node</stringProp>
            <stringProp name="Argument.value">${__P(idbnode)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_httptimeout" elementType="Argument">
            <stringProp name="Argument.name">_httptimeout</stringProp>
            <stringProp name="Argument.value">${__P(httptimeout)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_agent" elementType="Argument">
            <stringProp name="Argument.name">_agent</stringProp>
            <stringProp name="Argument.value">${__P(agent)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TH88_RU1_29ITX" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(loop)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(users)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup)}</stringProp>
        <longProp name="ThreadGroup.start_time">1375525852000</longProp>
        <longProp name="ThreadGroup.end_time">1375525852000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration)}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="T01_WS_Invocacion_ageEvento_POST" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;usuarioAutorId&quot;: &quot;${p_usuarioAutorID}&quot;,&#xd;
    &quot;nominaId&quot;: &quot;${p_nominaID}&quot;,&#xd;
    &quot;jefeNominaId&quot;: &quot;${p_jefeNominaID}&quot;,&#xd;
    &quot;sedeId&quot;: ${__Random(700000,999999)},&#xd;
    &quot;clienteId&quot;: &quot;${p_clientID}&quot;,&#xd;
    &quot;eEmpresa&quot;: &quot;Banco&quot;,&#xd;
    &quot;eModalidad&quot;: &quot;Presencial&quot;,&#xd;
    &quot;titulo&quot;: &quot;baja productividad&quot;,&#xd;
    &quot;descripcion&quot;: &quot;Armando&quot;,&#xd;
    &quot;color&quot;: &quot;FFF&quot;,&#xd;
    &quot;ePrioridad&quot;: &quot;${p_prioridad}&quot;,&#xd;
    &quot;dtInicio&quot;: &quot;2021-${p_mes}-${p_dia} 15:25:00-05:00&quot;,&#xd;
    &quot;dtFin&quot;: &quot;2021-${p_mes}-${p_dia} 20:30:00-05:00&quot;,&#xd;
    &quot;iRecordatorioMinutos&quot;: 10,&#xd;
    &quot;actividadId&quot;: null,&#xd;
    &quot;participanteGentera&quot;: [&#xd;
        {&#xd;
            &quot;nominaId&quot;: &quot;${p_nominaID}&quot;,&#xd;
            &quot;jefeNominaId&quot;: &quot;${p_jefeNominaID}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;nominaId&quot;: &quot;P00001&quot;,&#xd;
            &quot;jefeNominaId&quot;: &quot;J00001&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;nominaId&quot;: &quot;P99999&quot;,&#xd;
            &quot;jefeNominaId&quot;: &quot;J99999&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;participanteCliente&quot;: [&#xd;
        {&#xd;
            &quot;clienteId&quot;: &quot;${p_clientID}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;actualizacion&quot;: {&#xd;
        &quot;eTipoActualizacion&quot;: &quot;Asignacion&quot;,&#xd;
        &quot;motivoId&quot;: 6,&#xd;
        &quot;descripcion&quot;: &quot;Actividad Armando&quot;,&#xd;
        &quot;bRequiereNotificacion&quot;: false&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${_host}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">${_proto}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/banco/agenda-engine/api/v1/ageEvento?key=AIzaSyAwmziIphXTml6VbPrfu2seG3GUTMv8KqA</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="p_clientID" enabled="true">
            <stringProp name="filename">data\clientID.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">p_clientID</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="p_jefeNominaID" enabled="true">
            <stringProp name="filename">data\jefeNominaID.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">p_jefeNominaID</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="p_nominaID" enabled="true">
            <stringProp name="filename">data\nominaID.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">p_nominaID</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="p_usuarioAutorID" enabled="true">
            <stringProp name="filename">data\usuarioAutorID.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">p_usuarioAutorID</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="p_prioridad" enabled="true">
            <stringProp name="filename">data\prioridad.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">p_prioridad</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="p_dia" enabled="true">
            <stringProp name="filename">data\dia.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">p_dia</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="p_mes" enabled="true">
            <stringProp name="filename">data\mes.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">p_mes</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Temporizador Constante" enabled="false">
        <stringProp name="ConstantTimer.delay">100</stringProp>
      </ConstantTimer>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
